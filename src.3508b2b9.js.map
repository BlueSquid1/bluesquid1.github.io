{"version":3,"sources":["src/js/navigation.js","src/js/softkey.js","src/index.js"],"names":["firstElement","document","querySelectorAll","setAttribute","focus","getAllElements","getTheIndexOfTheSelectedElement","element","querySelector","parseInt","getAttribute","selectElement","forEach","call","index","selectThisElement","nodeName","blur","Down","event","allElements","currentIndex","setIndex","length","setSoftkey","Up","Softkey","setLabels","center","right","getCurrentElement","Enter","currentElement","tagName","addToDo","toggleToDo","SoftRight","remove","left","getElementById","innerText","value","toDos","node","createElement","text","createTextNode","appendChild","classList","toggle","addEventListener","key","Navigation"],"mappings":";AAkDe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAlDf,IAAA,EAAA,EAAA,QAAA,cAkDe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAhDf,WACQA,IAAAA,EAAeC,SAASC,iBAAiB,oBAAoB,GACnEF,EAAaG,aAAa,eAAgB,QAC1CH,EAAaG,aAAa,YAAa,KACvCH,EAAaI,QAJf,GAOA,IAAMC,EAAiB,WAAMJ,OAAAA,SAASC,iBAAiB,qBAEjDI,EAAkC,WAChCC,IAAAA,EAAUN,SAASO,cAAc,uBAChCD,OAAAA,EAAUE,SAASF,EAAQG,aAAa,aAAc,IAAM,GAG/DC,EAAgB,SAAAA,GACpB,MAAA,GAAGC,QAAQC,KAAKR,IAAkB,SAACE,EAASO,GACpCC,IAAAA,EAAoBR,IAAYI,EACtCJ,EAAQJ,aAAa,eAAgBY,GACrCR,EAAQJ,aAAa,YAAaW,GACT,UAArBP,EAAQS,WACVD,EAAoBR,EAAQH,QAAUG,EAAQU,WAI9CC,EAAO,SAAAC,GACLC,IAAAA,EAAcf,IACdgB,EAAef,IAEfgB,EADmBD,EAAe,EAAID,EAAYG,OAAS,EAC7B,EAAIF,EAAe,EACvDV,EAAcS,EAAYE,IAAaF,EAAY,IACnDI,EAAWF,IAGPG,EAAK,SAAAN,GACHC,IAAAA,EAAcf,IACdgB,EAAef,IAEfgB,EADmC,IAAjBD,EACWD,EAAYG,OAAS,EAAIF,EAAe,EAC3EV,EAAcS,EAAYE,IAAaF,EAAY,IACnDI,EAAWF,IAGPE,EAAa,SAAAF,GACjBI,OAAAA,EAAQC,QAAAA,UAAU,CAChBC,OAAqB,IAAbN,EAAiB,SAAW,SACpCO,MAAoB,IAAbP,EAAiB,GAAK,YAGlB,EAAA,CAAEJ,KAAAA,EAAMO,GAAAA,EAAId,cAAAA,GAAZ,QAAA,QAAA;;ACNA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA5Cf,IAAA,EAAA,EAAA,QAAA,iBA4Ce,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA1Cf,IAAMmB,EAAoB,WAAM7B,OAAAA,SAASO,cAAc,wBAEjDuB,EAAQ,SAAAZ,GACNa,IAAAA,EAAiBF,IACI,UAA3BE,EAAeC,QACXC,EAAQF,GACRG,EAAWH,IAGXI,EAAY,SAAAjB,GACVa,IAAAA,EAAiBF,IACnBE,GAA2B,UAA3BA,EAAeC,QAAfD,CAEEX,IAAAA,EAAeZ,SAASuB,EAAetB,aAAa,aAAc,IAElEC,EADwBV,SAASC,iBAAiB,oBACZmB,EAAe,GAChDV,EAAAA,QAAAA,cAAcA,GAErBU,EAAe,GAAM,GAAGM,EAAU,CAAEC,OAAQ,WAChDI,EAAeK,WAGXV,EAAY,SAA6B,GAA1BW,IAAAA,EAAAA,EAAAA,KAAMV,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,MACjC5B,SAASsC,eAAe,QAAQC,UAAYF,GAAc,GAC1DrC,SAASsC,eAAe,UAAUC,UAAYZ,GAAkB,GAChE3B,SAASsC,eAAe,SAASC,UAAYX,GAAgB,IAGzDK,EAAU,SAAAF,GACV,GAACA,EAAeS,MAAMlB,OAAtB,CACEmB,IAAAA,EAAQzC,SAASsC,eAAe,SAChCI,EAAO1C,SAAS2C,cAAc,QAC9BC,EAAO5C,SAAS6C,eAAed,EAAeS,OACpDE,EAAKxC,aAAa,iBAAkB,QACpCwC,EAAKI,YAAYF,GACjBH,EAAMK,YAAYJ,GAClBX,EAAeS,MAAQ,KAGnBN,EAAa,SAAAH,GACjBA,OAAAA,EAAegB,UAAUC,OAAO,cAEnB,EAAA,CAAElB,MAAAA,EAAOK,UAAAA,EAAWT,UAAAA,GAApB,QAAA,QAAA;;ACzCf,aAHA,IAAA,EAAA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,oBAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA1B,SAASiD,iBAAiB,UAAW,SAAA/B,GAC3BA,OAAAA,EAAMgC,KACP,IAAA,QACIzB,OAAAA,EAAQK,QAAAA,MAAMZ,GAClB,IAAA,YACIiC,OAAAA,EAAWlC,QAAAA,KAAKC,GACpB,IAAA,UACIiC,OAAAA,EAAW3B,QAAAA,GAAGN,GAClB,IAAA,YACIO,OAAAA,EAAQU,QAAAA,UAAUjB,GAC3B,QACE","file":"src.3508b2b9.js","sourceRoot":"..","sourcesContent":["import Softkey from \"./softkey\";\n\n(() => {\n  const firstElement = document.querySelectorAll(\"[nav-selectable]\")[0];\n  firstElement.setAttribute(\"nav-selected\", \"true\");\n  firstElement.setAttribute(\"nav-index\", \"0\");\n  firstElement.focus();\n})();\n\nconst getAllElements = () => document.querySelectorAll(\"[nav-selectable]\");\n\nconst getTheIndexOfTheSelectedElement = () => {\n  const element = document.querySelector(\"[nav-selected=true]\");\n  return element ? parseInt(element.getAttribute(\"nav-index\"), 10) : 0;\n};\n\nconst selectElement = selectElement =>\n  [].forEach.call(getAllElements(), (element, index) => {\n    const selectThisElement = element === selectElement;\n    element.setAttribute(\"nav-selected\", selectThisElement);\n    element.setAttribute(\"nav-index\", index);\n    if (element.nodeName === 'INPUT') {\n      selectThisElement ? element.focus() : element.blur();\n    }\n  });\n\nconst Down = event => {\n  const allElements = getAllElements();\n  const currentIndex = getTheIndexOfTheSelectedElement();\n  const goToFirstElement = currentIndex + 1 > allElements.length - 1;\n  const setIndex = goToFirstElement ? 0 : currentIndex + 1;\n  selectElement(allElements[setIndex] || allElements[0]);\n  setSoftkey(setIndex);\n};\n\nconst Up = event => {\n  const allElements = getAllElements();\n  const currentIndex = getTheIndexOfTheSelectedElement();\n  const goToLastElement = currentIndex === 0;\n  const setIndex = goToLastElement ? allElements.length - 1 : currentIndex - 1;\n  selectElement(allElements[setIndex] || allElements[0]);\n  setSoftkey(setIndex);\n};\n\nconst setSoftkey = setIndex =>\n  Softkey.setLabels({\n    center: setIndex === 0 ? \"Insert\" : \"Toggle\",\n    right: setIndex === 0 ? \"\" : \"Delete\"\n  });\n\nexport default { Down, Up, selectElement };\n","import Navigation from \"./navigation\";\n\nconst getCurrentElement = () => document.querySelector(\"[nav-selected=true]\");\n\nconst Enter = event => {\n  const currentElement = getCurrentElement();\n  currentElement.tagName === \"INPUT\"\n    ? addToDo(currentElement)\n    : toggleToDo(currentElement);\n};\n\nconst SoftRight = event => {\n  const currentElement = getCurrentElement();\n  if (currentElement.tagName === \"INPUT\") return;\n\n  const currentIndex = parseInt(currentElement.getAttribute(\"nav-index\"), 10);\n  const allElementsSelectable = document.querySelectorAll(\"[nav-selectable]\");\n  const selectElement = allElementsSelectable[currentIndex - 1];\n  Navigation.selectElement(selectElement);\n\n  if (currentIndex - 1 === 0) setLabels({ center: \"Insert\" });\n  currentElement.remove();\n};\n\nconst setLabels = ({ left, center, right }) => {\n  document.getElementById(\"left\").innerText = left ? left : \"\";\n  document.getElementById(\"center\").innerText = center ? center : \"\";\n  document.getElementById(\"right\").innerText = right ? right : \"\";\n};\n\nconst addToDo = currentElement => {\n  if (!currentElement.value.length) return;\n  const toDos = document.getElementById(\"toDos\");\n  const node = document.createElement(\"SPAN\");\n  const text = document.createTextNode(currentElement.value);\n  node.setAttribute(\"nav-selectable\", \"true\");\n  node.appendChild(text);\n  toDos.appendChild(node);\n  currentElement.value = \"\";\n};\n\nconst toggleToDo = currentElement =>\n  currentElement.classList.toggle(\"completed\");\n\nexport default { Enter, SoftRight, setLabels };\n","import Softkey from \"./js/softkey\";\nimport Navigation from \"./js/navigation\";\n\ndocument.addEventListener(\"keydown\", event => {\n  switch (event.key) {\n    case \"Enter\":\n      return Softkey.Enter(event);\n    case \"ArrowDown\":\n      return Navigation.Down(event);\n    case \"ArrowUp\":\n      return Navigation.Up(event);\n    case \"SoftRight\":\n      return Softkey.SoftRight(event);\n    default:\n      return;\n  }\n});\n"]}